using System;
using UnityEngine;
using UnityMVC.Controller;
using UnityMVC.Events;
using UnityMVC.View;

// Autogenerated code. DO NOT CHANGE unless it is really needed and you know what you are doing.
public partial class SomeTestController : Controller
{
    private SomeTestView View => _view;
    private SomeTestView _view;
    public new SomeTestControllerEvents Events => _events;
    private readonly SomeTestControllerEvents _events = new SomeTestControllerEvents();
    
    public override void SetView(View view)
    {
        if (_view != null)
        {
            Debug.LogException(new Exception($"More than one View are trying to access {this.GetType()}"));
            return;
        }
        _view = view as SomeTestView;
    }

    protected override void InternalAwake()
    {
        _events.onControllerInitialized?.Invoke(this);
    }
    protected override void InternalOnDestroy()
    {
        _events.onControllerDestroyed?.Invoke(this);
    }
}